{"version":3,"sources":["components/Card.jsx","components/loading.gif","components/Spiner.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","avatar","alt","userName","userLast","userEmail","Spinner","spinner","App","useState","cardData","setData","visibility","setVisibility","loading","setLoading","allData","a","axios","get","res","Promise","resolve","setTimeout","data","useEffect","onClick","map","user","first_name","last_name","email","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAaeA,EAXH,SAACC,GACT,OACE,mCACE,sBAAKC,UAAU,OAAf,UACI,qBAAKC,IAAMF,EAAMG,OAAQC,IAAI,iBAC7B,+BAAKJ,EAAMK,SAAX,IAAsBL,EAAMM,YAC5B,4BAAIN,EAAMO,kB,iBCRP,MAA0B,oCCW1BC,EARC,kBACd,mCACE,qBAAKP,UAAU,UACbC,IAAKO,EACLL,IAAI,kBCkDKM,MApDf,WACE,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACMC,EAAO,uCAAG,4BAAAC,EAAA,0DACVL,EADU,gCAEMM,IAAMC,IAAI,sCAFhB,cAENC,EAFM,OAGE,IAHF,SAIN,IAAIC,SAAQ,SAACC,GAAD,OAAaC,WAAWD,EAD5B,QAHF,OAKZX,EAAQS,EAAII,KAAKA,MALL,OAOdT,GAAW,GAPG,2CAAH,qDA8Bb,OAjBAU,qBAAU,WACJb,GACFI,OAgBF,qCACA,sBAAKjB,UAAU,SAAf,UACE,sDAEA,wBAAQ2B,QA1BI,WACdb,GAAc,GACdE,GAAW,IAwBT,0BAEAD,EAAU,cAAC,EAAD,IAAc,KACxB,8BACGA,EAAU,KAAOJ,EAASiB,KArBd,SAACC,GAClB,OAAId,EAAgBR,EAGhB,cAAC,EAAD,CAAMH,SAAYyB,EAAKC,WACrBzB,SAAYwB,EAAKE,UACjBzB,UAAYuB,EAAKG,MACjB9B,OAAU2B,EAAK3B,kBCtBV+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.a9f8179c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport '../App.css';\r\nconst Card =(props)=>{\r\n    return(\r\n      <>\r\n        <div className=\"card\">\r\n            <img src= {props.avatar} alt=\"user profile\"/>\r\n            <h1>{props.userName} {props.userLast}</h1>\r\n            <p>{props.userEmail}</p>\r\n        </div>\r\n      </>\r\n    );\r\n}\r\nexport default Card;","export default __webpack_public_path__ + \"static/media/loading.1952935e.gif\";","import React from \"react\";\r\nimport spinner from \"./loading.gif\";\r\nimport \"../App.css\"\r\nconst Spinner = () => (\r\n  <>\r\n    <img className=\"spinner\"\r\n      src={spinner}\r\n      alt=\"loading...\"\r\n    />\r\n  </>\r\n);\r\nexport default Spinner;\r\n","import React,{useEffect,useState } from 'react';\r\nimport './App.css';\r\nimport Card from './components/Card';\r\nimport axios from 'axios';\r\nimport Spinner from './components/Spiner';\r\nfunction App() {\r\n  const [cardData, setData] = useState([]);\r\n  const [visibility, setVisibility] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const allData = async () => {\r\n    if (visibility) {\r\n      const res = await axios.get(\"https://reqres.in/api/users?page=1\");\r\n      const delay = 1000;\r\n      await new Promise((resolve) => setTimeout(resolve, delay));\r\n      setData(res.data.data);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const display = () => {\r\n    setVisibility(true);\r\n    setLoading(true);\r\n  };\r\n  useEffect(() => {\r\n    if (visibility) {\r\n      allData();\r\n    }\r\n  },);\r\n  const renderCard = (user) => {\r\n    if (loading) return Spinner;\r\n    else {\r\n      return (\r\n        <Card userName = {user.first_name}\r\n          userLast = {user.last_name}\r\n          userEmail= {user.email}\r\n          avatar = {user.avatar}\r\n        />\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n    <div className=\"Navbar\">\r\n      <h1>Welcome To MyWebPage\r\n      </h1>\r\n      <button onClick={display}>Get Users</button>\r\n    </div>\r\n     {loading ? <Spinner /> : null}\r\n      <div>\r\n        {loading ? null : cardData.map(renderCard)}\r\n      </div>  \r\n      \r\n    </>\r\n    \r\n  );\r\n  \r\n  \r\n}\r\nexport default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}